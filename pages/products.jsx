import ProductContext from "../Context/productContext";
import { useContext, useRef } from "react";
import ProductWidget from "../Components/ProductWidget";
import { motion } from "framer-motion";
import Filter from "../Components/Filter";
import Featured from "../Components/Featured";
import Head from "next/head";
import Link from "next/link";
import Notification from "../Components/Notification";

export default function Products() {
  const {
    products,
    filteredProducts,
    setCategory,
    featured,
    currency,
    getOne,
    category,
    addToWish,
    checkProduct,
    addedToCart,
    notification,
    itemOnWish,
  } = useContext(ProductContext);
  const filter = useRef();
  const filterHandler = () => {
    filter.current.classList.toggle("activeFilter");
  };
  const categoryHandler = (e) => {
    setCategory(e.target.value);
  };
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 1 }}
      className="flex flex-col"
    >
      <Head>
        <title>Products - {category}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col md:flex-row">
        {notification === true ? (
          <Notification
            toastTitle={itemOnWish.title}
            toastMessage={"The product is already on the wish list"}
          />
        ) : null}
        <div className="flex flex-col md:flex-row border-b-2 border-neutral-700 pb-10">
          <Filter
            categoryHandler={categoryHandler}
            filter={filter}
            filterHandler={filterHandler}
          />
          <div className="products flex flex-wrap md:border-x-2 border-neutral-800 justify-center flex-[4] gap-4">
            {!products
              ? "Loading..."
              : filteredProducts?.map((product) => (
                  <ProductWidget
                    key={product.id}
                    product={product}
                    currency={currency}
                    getOne={getOne}
                    addToWish={addToWish}
                    checkProduct={checkProduct}
                    notification={notification}
                  />
                ))}
          </div>
        </div>
        <div className="px-2 border-b-2 border-neutral-700 py-2 flex flex-col items-center">
          <div className="mb-2 text-neutral-500">Recently added to cart</div>
          {addedToCart.length === 0 ? (
            <div className="w-[15rem] px-6">Nothing added yet.</div>
          ) : (
            addedToCart?.map((product, i) => (
              <Link href="/Product/[Product]" as={`/Product/${product.id}`}>
                <div
                  onClick={(e) => getOne(product)}
                  key={i}
                  className="w-[15rem] border-2 border-neutral-800 px-2 mb-2 mx-4 hover:bg-neutral-800 ease-in-out duration-200 cursor-pointer"
                >
                  {product.title}
                </div>
              </Link>
            ))
          )}
        </div>
      </div>
      <div className="featured h-auto justify-center flex flex-wrap items-center px-2 gap-6">
        {featured.map((product, i) => (
          <Featured
            product={product}
            getOne={getOne}
            addToWish={addToWish}
            currency={currency}
            key={i}
          />
        ))}
      </div>
    </motion.div>
  );
}
